package com.housing.dto;

import javax.validation.constraints.Email;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.springframework.validation.annotation.Validated;

import com.housing.utility.UserStatus;
import com.housing.utility.UserType;

@Validated
public class UserDTO {
	
	private Long id;

	@NotNull(message = "{user.userType.absent}")
	@Size(max = 15, message = "{user.userType.invalid}")
	private UserType userType = UserType.USER;

	@NotNull(message = "{user.visitedToday.absent}")
	private Boolean visitedToday;

	@NotNull(message = "{user.flagged.absent}")
	private Boolean flagged;

	@NotNull(message = "{user.status.absent}")
	@Size(max = 15, message = "{user.status.invalid}")
	private UserStatus status = UserStatus.PENDING;

	@NotNull(message = "{user.firstName.absent}")
	@Size(max = 50, message = "{user.firstName.invalid}")
	private String firstName;

	@Size(max = 50, message = "{user.lastName.invalid}")
	private String lastName;

	@NotNull(message = "user.email.absent")
	@Size(max = 150, message = "user.email.invalid")
	@Email(message = "user.email.invalid")
	private String email;

	@NotNull(message = "{user.username.absent}")
	@Size(max = 50, message = "{user.username.invalid}")
	private String username;

	@NotBlank(message = "{user.password.absent}")
	@Size(min = 6, max = 1500, message = "{user.password.invalid}")
	private String password;

	@NotNull(message = "{user.address.absent}")
	@Size(max = 300, message = "{user.address.invalid}")
	private String address;

	@NotNull(message = "{user.pincode.absent}")
	@Min(value = 100000, message = "{user.pincode.invalid}")
	@Max(value = 999999, message = "{user.pincode.invalid}")
	private Integer pincode;

	public UserDTO() {
		super();
		// TODO Auto-generated constructor stub
	}

	public UserDTO(Long id,
			@NotNull(message = "{user.userType.absent}") @Size(max = 15, message = "{user.userType.invalid}") UserType userType,
			@NotNull(message = "{user.visitedToday.absent}") Boolean visitedToday,
			@NotNull(message = "{user.flagged.absent}") Boolean flagged,
			@NotNull(message = "{user.status.absent}") @Size(max = 15, message = "{user.status.invalid}") UserStatus status,
			@NotNull(message = "{user.firstName.absent}") @Size(max = 50, message = "{user.firstName.invalid}") String firstName,
			@Size(max = 50, message = "{user.lastName.invalid}") String lastName,
			@NotNull(message = "user.email.absent") @Size(max = 150, message = "user.email.invalid") @Email(message = "user.email.invalid") String email,
			@NotNull(message = "{user.username.absent}") @Size(max = 50, message = "{user.username.invalid}") String username,
			@NotBlank(message = "{user.password.absent}") @Size(min = 6, max = 1500, message = "{user.password.invalid}") String password,
			@NotNull(message = "{user.address.absent}") @Size(max = 300, message = "{user.address.invalid}") String address,
			@NotNull(message = "{user.pincode.absent}") @Min(value = 100000, message = "{user.pincode.invalid}") @Max(value = 999999, message = "{user.pincode.invalid}") Integer pincode) {
		super();
		this.id = id;
		this.userType = userType;
		this.visitedToday = visitedToday;
		this.flagged = flagged;
		this.status = status;
		this.firstName = firstName;
		this.lastName = lastName;
		this.email = email;
		this.username = username;
		this.password = password;
		this.address = address;
		this.pincode = pincode;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public UserType getUserType() {
		return userType;
	}

	public void setUserType(UserType userType) {
		this.userType = userType;
	}

	public Boolean getVisitedToday() {
		return visitedToday;
	}

	public void setVisitedToday(Boolean visitedToday) {
		this.visitedToday = visitedToday;
	}

	public Boolean getFlagged() {
		return flagged;
	}

	public void setFlagged(Boolean flagged) {
		this.flagged = flagged;
	}

	public UserStatus getStatus() {
		return status;
	}

	public void setStatus(UserStatus status) {
		this.status = status;
	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public Integer getPincode() {
		return pincode;
	}

	public void setPincode(Integer pincode) {
		this.pincode = pincode;
	}

	@Override
	public String toString() {
		return "UserDTO [id=" + id + ", userType=" + userType + ", visitedToday=" + visitedToday + ", flagged="
				+ flagged + ", status=" + status + ", firstName=" + firstName + ", lastName=" + lastName + ", email="
				+ email + ", username=" + username + ", password=" + password + ", address=" + address + ", pincode="
				+ pincode + "]";
	}
	
}
