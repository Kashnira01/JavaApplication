package com.housing.entity;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.PastOrPresent;
import javax.validation.constraints.PositiveOrZero;
import javax.validation.constraints.Size;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;

@Entity
@Table(name = "professional_tbl")
public class Professional {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column
	private Long id;

	@NotNull(message = "{professional.serviceType.absent}")
	@Size(max = 50, message = "{professional.serviceType.invalid}")
	@Column(name = "serviceType", nullable = false, length = 50)
	private String serviceType;

	@NotNull(message = "{professional.experience.absent}")
	@PositiveOrZero(message = "{professional.experience.invalid}")
	@Column(name = "experience", nullable = false, columnDefinition = "INTEGER DEFAULT 0")
	private Integer experience = 0;

	@NotNull(message = "{professional.description.absent}")
	@Size(max = 150, message = "{professional.description.invalid}")
	@Column(name = "description", length = 150)
	private String description;

	@NotNull(message = "{professional.joiningDate.absent}")
	@PastOrPresent(message = "{professional.joiningDate.invalid}")
	@Column(name = "joiningDate", nullable = false)
	private LocalDate joiningDate = LocalDate.now();

	@NotNull(message = "{professional.availability.absent}")
	@Column(name = "availability", nullable = false, columnDefinition = "BOOLEAN DEFAULT TRUE")
	private Boolean availability;

	@OneToMany(mappedBy = "professional", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	private List<Rating> ratings = new ArrayList<>();

	@OneToOne
	@JoinColumn(name = "user_id", nullable = false)
	private User user;
	
	
	
}